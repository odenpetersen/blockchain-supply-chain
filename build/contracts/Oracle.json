{
  "contractName": "Oracle",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isPaid",
          "type": "bool"
        }
      ],
      "name": "setPaid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "isPaid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"isPaid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isPaid\",\"type\":\"bool\"}],\"name\":\"setPaid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Amos Tan, Oden Peterson (COMP6452 2023T2 Group 22)\",\"kind\":\"dev\",\"methods\":{\"isPaid(address)\":{\"params\":{\"contractAddress\":\"the address of the order contract\"},\"returns\":{\"_0\":\"the paid status of the order\"}},\"setPaid(address,bool)\":{\"params\":{\"_isPaid\":\"the paid status of the order\",\"contractAddress\":\"the address of the order contract\"}}},\"title\":\"An oracle contract where the oracle manager could update the paid status of the order\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"initialization of the oracle to set the owner of this contract as manager\"},\"isPaid(address)\":{\"notice\":\"get the paid status of the order\"},\"setPaid(address,bool)\":{\"notice\":\"set the paid status of the order (only manager can do this)\"}},\"notice\":\"This contract is used to update the paid status of the order\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/Oracle.sol\":\"Oracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/Oracle.sol\":{\"keccak256\":\"0x14394ceb0d805a45f2066a294255f2cf5e840463f85804b8015fe36e689cc4cf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4db057890b27a0964c94f9eaaacc43fd2c6dfccb536dcf841cbcc8b3e349d05d\",\"dweb:/ipfs/QmUn7nhkzFUmxDgJ6BZiUDuMpVXZYa7hJPjyANwZLhacUs\"]},\"project:/src/interfaces/IOracle.sol\":{\"keccak256\":\"0x8b5aab8e87ac40bc90848ecadf0fc4756c95136f041b967afcd3c85935b3b73b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f83d75467c2cc8781d39af3ae4403c923a939845591101cea84f3ba711b36b4b\",\"dweb:/ipfs/QmXrSWRBJGprfXNRaVs1MNaXLVMXttH7zuNX1Wz1Wbm3Rq\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103d1806100606000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636ded82f81461003b578063770b6bd51461006b575b600080fd5b61005560048036038101906100509190610229565b610087565b6040516100629190610271565b60405180910390f35b610085600480360381019061008091906102b8565b6100dd565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101629061037b565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f6826101cb565b9050919050565b610206816101eb565b811461021157600080fd5b50565b600081359050610223816101fd565b92915050565b60006020828403121561023f5761023e6101c6565b5b600061024d84828501610214565b91505092915050565b60008115159050919050565b61026b81610256565b82525050565b60006020820190506102866000830184610262565b92915050565b61029581610256565b81146102a057600080fd5b50565b6000813590506102b28161028c565b92915050565b600080604083850312156102cf576102ce6101c6565b5b60006102dd85828601610214565b92505060206102ee858286016102a3565b9150509250929050565b600082825260208201905092915050565b7f43616e206f6e6c7920626520657865637574656420627920746865206f72616360008201527f6c65206d616e6167657200000000000000000000000000000000000000000000602082015250565b6000610365602a836102f8565b915061037082610309565b604082019050919050565b6000602082019050818103600083015261039481610358565b905091905056fea26469706673582212205d9ac50ee534bb27363b4b9ea40bab33867db1ec65d83f643eea4cd9c20b6df464736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80636ded82f81461003b578063770b6bd51461006b575b600080fd5b61005560048036038101906100509190610229565b610087565b6040516100629190610271565b60405180910390f35b610085600480360381019061008091906102b8565b6100dd565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101629061037b565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f6826101cb565b9050919050565b610206816101eb565b811461021157600080fd5b50565b600081359050610223816101fd565b92915050565b60006020828403121561023f5761023e6101c6565b5b600061024d84828501610214565b91505092915050565b60008115159050919050565b61026b81610256565b82525050565b60006020820190506102866000830184610262565b92915050565b61029581610256565b81146102a057600080fd5b50565b6000813590506102b28161028c565b92915050565b600080604083850312156102cf576102ce6101c6565b5b60006102dd85828601610214565b92505060206102ee858286016102a3565b9150509250929050565b600082825260208201905092915050565b7f43616e206f6e6c7920626520657865637574656420627920746865206f72616360008201527f6c65206d616e6167657200000000000000000000000000000000000000000000602082015250565b6000610365602a836102f8565b915061037082610309565b604082019050919050565b6000602082019050818103600083015261039481610358565b905091905056fea26469706673582212205d9ac50ee534bb27363b4b9ea40bab33867db1ec65d83f643eea4cd9c20b6df464736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3542:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:6",
                "type": ""
              }
            ],
            "src": "7:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:6",
                "type": ""
              }
            ],
            "src": "334:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:6",
                "type": ""
              }
            ],
            "src": "466:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:6",
                "type": ""
              }
            ],
            "src": "568:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:6",
                "type": ""
              }
            ],
            "src": "696:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:6",
                "type": ""
              }
            ],
            "src": "841:329:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1218:48:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1228:32:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1253:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1246:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1239:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1228:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1200:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1210:7:6",
                "type": ""
              }
            ],
            "src": "1176:90:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1331:50:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1348:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1368:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1353:14:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1353:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1341:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1341:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1341:34:6"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1319:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1326:3:6",
                "type": ""
              }
            ],
            "src": "1272:109:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1479:118:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1489:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1501:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1512:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1497:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1497:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1489:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1563:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1576:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1587:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1572:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1572:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1525:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1525:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1525:65:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1451:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1463:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1474:4:6",
                "type": ""
              }
            ],
            "src": "1387:210:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1643:76:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1697:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1706:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1709:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1699:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1699:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1699:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1666:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1688:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "1673:14:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1673:21:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1663:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1663:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1656:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1656:40:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1653:60:6"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1636:5:6",
                "type": ""
              }
            ],
            "src": "1603:116:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1774:84:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1784:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1806:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1793:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1793:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1784:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1846:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1822:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1822:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1822:30:6"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1752:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1760:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1768:5:6",
                "type": ""
              }
            ],
            "src": "1725:133:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1944:388:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1990:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1992:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1992:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1992:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1965:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1974:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1961:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1961:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1986:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1957:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1957:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1954:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2083:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2098:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2112:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2102:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2127:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2162:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2173:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2158:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2158:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2182:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2137:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2137:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2127:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2210:115:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2225:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2239:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2229:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2255:60:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2287:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2298:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2283:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2283:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2307:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2265:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2265:50:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2255:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1906:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1917:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1929:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1937:6:6",
                "type": ""
              }
            ],
            "src": "1864:468:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2434:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2451:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2456:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2444:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2444:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2444:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2472:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2491:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2496:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2487:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2487:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2472:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2406:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2411:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2422:11:6",
                "type": ""
              }
            ],
            "src": "2338:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2619:123:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2641:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2649:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2637:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2637:14:6"
                      },
                      {
                        "hexValue": "43616e206f6e6c7920626520657865637574656420627920746865206f726163",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2653:34:6",
                        "type": "",
                        "value": "Can only be executed by the orac"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2630:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2630:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2630:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2709:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2717:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2705:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2705:15:6"
                      },
                      {
                        "hexValue": "6c65206d616e61676572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2722:12:6",
                        "type": "",
                        "value": "le manager"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2698:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2698:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2698:37:6"
                }
              ]
            },
            "name": "store_literal_in_memory_ab60ceb1f4406d6c1a782854e080c750164435e69dc39c73c8600f7d6bc51608",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2611:6:6",
                "type": ""
              }
            ],
            "src": "2513:229:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2894:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2904:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2970:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2975:2:6",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2911:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2911:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2904:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3076:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ab60ceb1f4406d6c1a782854e080c750164435e69dc39c73c8600f7d6bc51608",
                      "nodeType": "YulIdentifier",
                      "src": "2987:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2987:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2987:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3089:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3100:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3105:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3096:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3096:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3089:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ab60ceb1f4406d6c1a782854e080c750164435e69dc39c73c8600f7d6bc51608_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2882:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2890:3:6",
                "type": ""
              }
            ],
            "src": "2748:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3291:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3301:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3313:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3324:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3309:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3309:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3301:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3348:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3359:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3344:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3344:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3367:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3373:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3363:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3363:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3337:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3337:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3337:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3393:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3527:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ab60ceb1f4406d6c1a782854e080c750164435e69dc39c73c8600f7d6bc51608_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3401:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3401:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3393:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab60ceb1f4406d6c1a782854e080c750164435e69dc39c73c8600f7d6bc51608__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3271:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3286:4:6",
                "type": ""
              }
            ],
            "src": "3120:419:6"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ab60ceb1f4406d6c1a782854e080c750164435e69dc39c73c8600f7d6bc51608(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can only be executed by the orac\")\n\n        mstore(add(memPtr, 32), \"le manager\")\n\n    }\n\n    function abi_encode_t_stringliteral_ab60ceb1f4406d6c1a782854e080c750164435e69dc39c73c8600f7d6bc51608_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_ab60ceb1f4406d6c1a782854e080c750164435e69dc39c73c8600f7d6bc51608(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ab60ceb1f4406d6c1a782854e080c750164435e69dc39c73c8600f7d6bc51608__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ab60ceb1f4406d6c1a782854e080c750164435e69dc39c73c8600f7d6bc51608_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "334:1209:0:-:0;;;846:51;;;;;;;;;;880:10;870:7;;:20;;;;;;;;;;;;;;;;;;334:1209;;;;;;",
  "deployedSourceMap": "334:1209:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1417:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1096:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1417:124;1481:4;1504:13;:30;1518:15;1504:30;;;;;;;;;;;;;;;;;;;;;;;;;1497:37;;1417:124;;;:::o;1096:156::-;657:7;;;;;;;;;;643:21;;:10;:21;;;622:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;1238:7:::1;1205:13;:30;1219:15;1205:30;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1096:156:::0;;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:116::-;1673:21;1688:5;1673:21;:::i;:::-;1666:5;1663:32;1653:60;;1709:1;1706;1699:12;1653:60;1603:116;:::o;1725:133::-;1768:5;1806:6;1793:20;1784:29;;1822:30;1846:5;1822:30;:::i;:::-;1725:133;;;;:::o;1864:468::-;1929:6;1937;1986:2;1974:9;1965:7;1961:23;1957:32;1954:119;;;1992:79;;:::i;:::-;1954:119;2112:1;2137:53;2182:7;2173:6;2162:9;2158:22;2137:53;:::i;:::-;2127:63;;2083:117;2239:2;2265:50;2307:7;2298:6;2287:9;2283:22;2265:50;:::i;:::-;2255:60;;2210:115;1864:468;;;;;:::o;2338:169::-;2422:11;2456:6;2451:3;2444:19;2496:4;2491:3;2487:14;2472:29;;2338:169;;;;:::o;2513:229::-;2653:34;2649:1;2641:6;2637:14;2630:58;2722:12;2717:2;2709:6;2705:15;2698:37;2513:229;:::o;2748:366::-;2890:3;2911:67;2975:2;2970:3;2911:67;:::i;:::-;2904:74;;2987:93;3076:3;2987:93;:::i;:::-;3105:2;3100:3;3096:12;3089:19;;2748:366;;;:::o;3120:419::-;3286:4;3324:2;3313:9;3309:18;3301:26;;3373:9;3367:4;3363:20;3359:1;3348:9;3344:17;3337:47;3401:131;3527:4;3401:131;:::i;:::-;3393:139;;3120:419;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity 0.8.19;\n\nimport \"./interfaces/IOracle.sol\";\n\n/// @title An oracle contract where the oracle manager could update the paid status of the order\n/// @author Amos Tan, Oden Peterson (COMP6452 2023T2 Group 22)\n/// @notice This contract is used to update the paid status of the order\ncontract Oracle is IOracle {\n    address manager; // the manager of the oracle / owner of this contract\n    mapping(address => bool) contractsPaid; // mapping of contracts to paid status\n\n    /// @notice modifier to check if the caller is the manager\n    modifier onlyManager() {\n        require(\n            msg.sender == manager,\n            \"Can only be executed by the oracle manager\"\n        );\n        _;\n    }\n\n    /// @notice initialization of the oracle to set the owner of this contract as manager\n    constructor() {\n        manager = msg.sender;\n    }\n\n    /// @notice set the paid status of the order (only manager can do this)\n    /// @param contractAddress the address of the order contract\n    /// @param _isPaid the paid status of the order\n    function setPaid(\n        address contractAddress,\n        bool _isPaid\n    ) external onlyManager {\n        contractsPaid[contractAddress] = _isPaid;\n    }\n\n    /// @notice get the paid status of the order\n    /// @param contractAddress the address of the order contract\n    /// @return the paid status of the order\n    function isPaid(address contractAddress) external view returns (bool) {\n        return contractsPaid[contractAddress];\n    }\n}\n",
  "sourcePath": "/Users/odenpetersen/Documents/Programming/blockchain-supply-chain/src/Oracle.sol",
  "ast": {
    "absolutePath": "project:/src/Oracle.sol",
    "exportedSymbols": {
      "IOracle": [
        813
      ],
      "Oracle": [
        65
      ]
    },
    "id": 66,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:0"
      },
      {
        "absolutePath": "project:/src/interfaces/IOracle.sol",
        "file": "./interfaces/IOracle.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 66,
        "sourceUnit": 814,
        "src": "65:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "IOracle",
              "nameLocations": [
                "353:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 813,
              "src": "353:7:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "353:7:0"
          }
        ],
        "canonicalName": "Oracle",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "101:233:0",
          "text": "@title An oracle contract where the oracle manager could update the paid status of the order\n @author Amos Tan, Oden Peterson (COMP6452 2023T2 Group 22)\n @notice This contract is used to update the paid status of the order"
        },
        "fullyImplemented": true,
        "id": 65,
        "linearizedBaseContracts": [
          65,
          813
        ],
        "name": "Oracle",
        "nameLocation": "343:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "manager",
            "nameLocation": "375:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 65,
            "src": "367:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "367:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "contractsPaid",
            "nameLocation": "467:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 65,
            "src": "442:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 10,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 8,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "450:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "442:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 9,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "461:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "612:138:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 15,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "643:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 16,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "647:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "643:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 17,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "657:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "643:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e206f6e6c7920626520657865637574656420627920746865206f7261636c65206d616e61676572",
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "678:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab60ceb1f4406d6c1a782854e080c750164435e69dc39c73c8600f7d6bc51608",
                          "typeString": "literal_string \"Can only be executed by the oracle manager\""
                        },
                        "value": "Can only be executed by the oracle manager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab60ceb1f4406d6c1a782854e080c750164435e69dc39c73c8600f7d6bc51608",
                          "typeString": "literal_string \"Can only be executed by the oracle manager\""
                        }
                      ],
                      "id": 14,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "622:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "622:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "622:110:0"
                },
                {
                  "id": 22,
                  "nodeType": "PlaceholderStatement",
                  "src": "742:1:0"
                }
              ]
            },
            "documentation": {
              "id": 12,
              "nodeType": "StructuredDocumentation",
              "src": "526:58:0",
              "text": "@notice modifier to check if the caller is the manager"
            },
            "id": 24,
            "name": "onlyManager",
            "nameLocation": "598:11:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "609:2:0"
            },
            "src": "589:161:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "860:37:0",
              "statements": [
                {
                  "expression": {
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28,
                      "name": "manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "870:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 29,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "880:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 30,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "884:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "880:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "870:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "870:20:0"
                }
              ]
            },
            "documentation": {
              "id": 25,
              "nodeType": "StructuredDocumentation",
              "src": "756:85:0",
              "text": "@notice initialization of the oracle to set the owner of this contract as manager"
            },
            "id": 34,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "857:2:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:0:0"
            },
            "scope": 65,
            "src": "846:51:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              804
            ],
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "1195:57:0",
              "statements": [
                {
                  "expression": {
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 44,
                        "name": "contractsPaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1205:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 46,
                      "indexExpression": {
                        "id": 45,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "1219:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1205:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47,
                      "name": "_isPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1238:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1205:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:40:0"
                }
              ]
            },
            "documentation": {
              "id": 35,
              "nodeType": "StructuredDocumentation",
              "src": "903:188:0",
              "text": "@notice set the paid status of the order (only manager can do this)\n @param contractAddress the address of the order contract\n @param _isPaid the paid status of the order"
            },
            "functionSelector": "770b6bd5",
            "id": 51,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 42,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41,
                  "name": "onlyManager",
                  "nameLocations": [
                    "1183:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "1183:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1183:11:0"
              }
            ],
            "name": "setPaid",
            "nameLocation": "1105:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "1130:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "1122:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "_isPaid",
                  "nameLocation": "1160:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "1155:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1112:61:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1195:0:0"
            },
            "scope": 65,
            "src": "1096:156:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              812
            ],
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "1487:54:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 59,
                      "name": "contractsPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1504:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 61,
                    "indexExpression": {
                      "id": 60,
                      "name": "contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1518:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1504:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 58,
                  "id": 62,
                  "nodeType": "Return",
                  "src": "1497:37:0"
                }
              ]
            },
            "documentation": {
              "id": 52,
              "nodeType": "StructuredDocumentation",
              "src": "1258:154:0",
              "text": "@notice get the paid status of the order\n @param contractAddress the address of the order contract\n @return the paid status of the order"
            },
            "functionSelector": "6ded82f8",
            "id": 64,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPaid",
            "nameLocation": "1426:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "1441:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1433:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1432:25:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1481:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1480:6:0"
            },
            "scope": 65,
            "src": "1417:124:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 66,
        "src": "334:1209:0",
        "usedErrors": []
      }
    ],
    "src": "40:1504:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.14",
  "updatedAt": "2023-07-25T00:33:59.627Z",
  "devdoc": {
    "author": "Amos Tan, Oden Peterson (COMP6452 2023T2 Group 22)",
    "kind": "dev",
    "methods": {
      "isPaid(address)": {
        "params": {
          "contractAddress": "the address of the order contract"
        },
        "returns": {
          "_0": "the paid status of the order"
        }
      },
      "setPaid(address,bool)": {
        "params": {
          "_isPaid": "the paid status of the order",
          "contractAddress": "the address of the order contract"
        }
      }
    },
    "title": "An oracle contract where the oracle manager could update the paid status of the order",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "initialization of the oracle to set the owner of this contract as manager"
      },
      "isPaid(address)": {
        "notice": "get the paid status of the order"
      },
      "setPaid(address,bool)": {
        "notice": "set the paid status of the order (only manager can do this)"
      }
    },
    "notice": "This contract is used to update the paid status of the order",
    "version": 1
  }
}